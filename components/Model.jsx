/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
// And fixed up by me!
import React, { useEffect, useRef } from 'react';
import { useGraph } from '@react-three/fiber';
import { useAnimations, useFBX, useGLTF } from '@react-three/drei';
import { SkeletonUtils } from 'three-stdlib';

function Model({ animationName = 'idle', ...props }) {
  const group = useRef();

  const { scene } = useGLTF('/models/model.glb');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);

  const { animations: idleAnimation } = useFBX('/models/idle.fbx');
  const { animations: saluteAnimation } = useFBX('/models/salute.fbx');
  const { animations: wavingAnimation } = useFBX('/models/waving.fbx');
  const { animations: victoryAnimation } = useFBX('/models/victory.fbx');
  const { animations: wavingLongAnimation } = useFBX('/models/waveLong.fbx');

  idleAnimation[0].name = 'idle';
  saluteAnimation[0].name = 'salute';
  wavingAnimation[0].name = 'waving';
  victoryAnimation[0].name = 'victory';
  wavingLongAnimation[0].name = 'wave';

  const { actions } = useAnimations(
    [
      idleAnimation[0],
      saluteAnimation[0],
      wavingAnimation[0],
      victoryAnimation[0],
      wavingLongAnimation[0],
    ],
    group
  );

  useEffect(() => {
    if (!actions || !actions[animationName]) return; // Ensure actions and animation exist
    actions[animationName].reset().fadeIn(0.5).play();
    return () => actions[animationName]?.fadeOut(0.5);
  }, [animationName, actions]);

  return (
    <group {...props} dispose={null} ref={group}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        geometry={nodes.avaturn_body.geometry}
        material={materials.avaturn_body_material}
        skeleton={nodes.avaturn_body.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_hair_0.geometry}
        material={materials.avaturn_hair_0_material}
        skeleton={nodes.avaturn_hair_0.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_hair_1.geometry}
        material={materials.avaturn_hair_1_material}
        skeleton={nodes.avaturn_hair_1.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_shoes_0.geometry}
        material={materials.avaturn_shoes_0_material}
        skeleton={nodes.avaturn_shoes_0.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_look_0.geometry}
        material={materials.avaturn_look_0_material}
        skeleton={nodes.avaturn_look_0.skeleton}
      />
    </group>
  );
}

useGLTF.preload('/models/model.glb');

export default Model;
